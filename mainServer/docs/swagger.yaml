definitions:
  entities.User:
    properties:
      email:
        type: string
      name:
        type: string
      pwd:
        type: string
    type: object
  entities.Version:
    properties:
      authors:
        items:
          type: string
        type: array
      content:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Documentation of Alexandria's API. Endpoints can be tried out directly
    in this interactive documentation.
  title: API documentation
  version: 1.0.0
paths:
  /articles/{articleID}/versions/{versionID}:
    get:
      description: Gets the version content + metadata from the database + filesystem.
        Must be accessible without being authenticated.
      parameters:
      - description: Article ID
        in: path
        name: articleID
        required: true
        type: string
      - description: Version ID
        in: path
        name: versionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Version'
            type: array
        "404":
          description: Version not found
      summary: Get version content + metadata
    post:
      consumes:
      - multipart/form-data
      description: Upload files to update an article version, can only be done by
        an owner. Requires multipart form data, with a file attached as the field
        "file"
      parameters:
      - description: Article ID
        in: path
        name: articleID
        required: true
        type: string
      - description: Version ID
        in: path
        name: versionID
        required: true
        type: string
      responses:
        "200":
          description: Success
        "400":
          description: Bad request, possibly bad file data or permissions
        "404":
          description: Specified article version not found
      summary: Update article version
  /createExampleUser:
    post:
      description: Creates a hardcoded user entity and adds it to the database, demonstrates
        how to add to database
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Temporary user creation endpoint
  /getExampleUser:
    get:
      description: Returns a user with a hardcoded email address, demonstrates how
        to use the services.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
      summary: Get test user from database endpoint
  /login:
    post:
      consumes:
      - application/json
      description: Takes in user email and password from a JSON body, verifies if
        they are correct with the database and returns a JWT token
      responses:
        "200":
          description: Success
        "400":
          description: Invalid JSON provided
        "403":
          description: Invalid password
        "500":
          description: Could not create token
      summary: Endpoint for user logging in
  /users:
    post:
      consumes:
      - application/json
      description: Takes in user credentials from a JSON body, and makes sure they
        are securely stored in the database.
      responses:
        "200":
          description: Success
        "400":
          description: Invalid user JSON provided
        "403":
          description: Could not generate password hash
        "409":
          description: Could not save user to database
      summary: Endpoint for user registration
swagger: "2.0"
